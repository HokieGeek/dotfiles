#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : chunkc border::color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : chunkc border::color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     *             : echo "hello everyone"
#     "qutebrowser" : echo "hello qutebrowser"
#     "terminal"    ~
#     "finder"      : false
# ]

# specify a file that should be included as an additional config-file.
# treated as an absolutepath if the filename begins with '/' otherwise
# the file is relative to the path of the config-file it was loaded from.
#
# .load "/Users/Koe/.config/partial_skhdrc"
# .load "partial_skhdrc"

# prevent skhd from monitoring events for specific applications.
#
# .blacklist [
#    "kitty"
#    "terminal"
#    "qutebrowser"
# ]

# focus window
# alt - h : chunkc tiling::window --focus west
# alt - j : chunkc tiling::window --focus south
# alt - k : chunkc tiling::window --focus north
# alt - l : chunkc tiling::window --focus east

# meh - n : chunkc tiling::window --focus prev
meh - e : chunkc tiling::window --focus prev
meh - n : chunkc tiling::window --focus next

# meh - m : chunkc tiling::window --focus west

# equalize size of windows
# shift + alt - 0 : chunkc tiling::desktop --equalize

# swap window
# shift + alt - h : chunkc tiling::window --swap west
# shift + alt - j : chunkc tiling::window --swap south
# shift + alt - k : chunkc tiling::window --swap north
# shift + alt - l : chunkc tiling::window --swap east
meh - m : chunkc tiling::window --focus biggest


# move window
shift + cmd - h : chunkc tiling::window --warp west
shift + cmd - n : chunkc tiling::window --warp south
shift + cmd - e : chunkc tiling::window --warp north
shift + cmd - i : chunkc tiling::window --warp east

# make floating window fill screen
# shift + alt - up     : chunkc tiling::window --grid-layout 1:1:0:0:1:1

# make floating window fill left-half of screen
# shift + alt - left   : chunkc tiling::window --grid-layout 1:2:0:0:1:1

# make floating window fill right-half of screen
# shift + alt - i  : chunkc tiling::window --grid-layout 1:2:1:0:1:1

# create desktop, move window and follow focus
# shift + cmd - n : chunkc tiling::desktop --create;\
#                   id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
#                   chunkc tiling::window --send-to-desktop $(echo ${id##* });\
#                   chunkc tiling::desktop --focus $(echo ${id##* })
# create desktop and follow focus
# cmd + alt - n : chunkc tiling::desktop --create;\
#                 id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
#                 chunkc tiling::desktop --focus $(echo ${id##* })
# destroy desktop
# cmd + alt - w : chunkc tiling::desktop --annihilate

# fast focus desktop
# meh - tab : chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
# cmd + alt - n : chunkc tiling::desktop --focus prev
# cmd + alt - e : chunkc tiling::desktop --focus next
# lctrl + cmd + lalt - 1 : chunkc tiling::desktop --focus 1
# lctrl + cmd + lalt - 2 : chunkc tiling::desktop --focus 2
# lctrl + cmd + lalt - 3 : chunkc tiling::desktop --focus 3
# lctrl + cmd + lalt - 4 : chunkc tiling::desktop --focus 4
# lctrl + cmd + lalt - 5 : chunkc tiling::desktop --focus 5
# lctrl + cmd + lalt - 6 : chunkc tiling::desktop --focus 6
# lctrl + cmd + lalt - 7 : chunkc tiling::desktop --focus 7
# lctrl + cmd + lalt - 8 : chunkc tiling::desktop --focus 8
# lctrl + cmd + lalt - 9 : chunkc tiling::desktop --focus 9

# send window to desktop
shift + cmd - 1 : chunkc tiling::window --send-to-desktop 1
shift + cmd - 2 : chunkc tiling::window --send-to-desktop 2
shift + cmd - 3 : chunkc tiling::window --send-to-desktop 3
shift + cmd - 4 : chunkc tiling::window --send-to-desktop 4
shift + cmd - 5 : chunkc tiling::window --send-to-desktop 5
shift + cmd - 6 : chunkc tiling::window --send-to-desktop 6
shift + cmd - 7 : chunkc tiling::window --send-to-desktop 7
shift + cmd - 8 : chunkc tiling::window --send-to-desktop 8
shift + cmd - 9 : chunkc tiling::window --send-to-desktop 9

# focus monitor
lctrl + cmd - 1  : chunkc tiling::monitor -f 1
lctrl + cmd - 2  : chunkc tiling::monitor -f 2
lctrl + cmd - 3  : chunkc tiling::monitor -f 3

# increase region size
meh - h : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
# shift + alt - s : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
# shift + alt - w : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
meh - i : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east

# decrease region size
hyper - h : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
# shift + cmd - s : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
# shift + cmd - w : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
hyper - i : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east

# set insertion point for focused container
# ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
# ctrl + alt - h : chunkc tiling::window --use-insertion-point west
# ctrl + alt - j : chunkc tiling::window --use-insertion-point south
# ctrl + alt - k : chunkc tiling::window --use-insertion-point north
# ctrl + alt - l : chunkc tiling::window --use-insertion-point east

# rotate tree
lctrl + cmd + lalt - space : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
# alt - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
# alt - x : chunkc tiling::desktop --mirror horizontal

# toggle desktop offset
# alt - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
# hyper - space : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
# hyper - space : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
hyper - space : chunkc tiling::window --toggle parent

# toggle window split type
# alt - e : chunkc tiling::window --toggle split

# toggle window fade
# alt - q : chunkc tiling::window --toggle fade

# float / unfloat window and center on screen
# alt - t : chunkc tiling::window --toggle float;\
#           chunkc tiling::window --grid-layout 4:4:1:1:2:2

# toggle sticky
# hyper - s : chunkc tiling::window --toggle sticky

# toggle sticky, float and resize to picture-in-picture size
# alt - p : chunkc tiling::window --toggle sticky;\
#           chunkc tiling::window --grid-layout 5:5:4:0:1:1

# float next window to be tiled
# shift + alt - t : chunkc set window_float_next 1

# change layout of desktop
meh - a : chunkc tiling::desktop --layout bsp
meh - r : chunkc tiling::desktop --layout monocle
# ctrl + alt - s : chunkc tiling::desktop --layout float

# ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1

