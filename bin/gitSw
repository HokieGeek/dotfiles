#!/bin/bash

usage() {
    echo "USAGE: `basename $0` <BRANCH_NAME>"
}
if [ $# -le 0 ]; then
    echo "ERROR: Not enough arguments" >&2
    usage
    exit 1
fi
new_branch=$1

## make sure you're in a git repo
git status 2>&1 >/dev/null
if [ $? -ne 0 ]; then
    echo "ERROR: Not in a git repository, you idiot" >&2
    exit 2
fi

## Ensure that the new branch exists, otherwise create it from master
git branch | grep $new_branch || { $0 master && git branch $new_branch }

## Determine the current branch and build a stash name
curr_branch=`git branch | grep '^*' | sed 's/^\* //'`
curr_stash_name=$curr_branch
echo "CURR_BRANCH: $curr_branch"
# curr_branches_count=`git stash list | grep -c "On ${curr_branch}:"`
# [ $curr_branches_count -gt 0 ] && curr_stash_name="${curr_stash_name}_${curr_branches_count}"
echo "CURR_STASH_NAME: $curr_stash_name"

## Stash the current work and checkout the new branch
git stash save $curr_stash_name
git checkout $new_branch

## Look for a stash for the new branch and pop it
stash_num=`git stash list | grep $new_branch | cut -d: -f1 | cut -d'{' -f2 | cut -d'}' -f1`
[ $? -eq 0 ] && git stash pop stash@\{$stash_num\}
exit 0
